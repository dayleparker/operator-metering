---

meteringconfig_chart_path: "{{ lookup('env','HELM_CHART_PATH') }}"
meteringconfig_prune_label_key: 'metering.openshift.io/prune'
meteringconfig_prune_namespace_label_key: 'metering.openshift.io/ns-prune'

meteringconfig_default_values_file: "{{ meteringconfig_chart_path + '/values.yaml' }}"
meteringconfig_default_values: "{{ lookup('file', meteringconfig_default_values_file) | from_yaml }}"

# contains the users overrides
meteringconfig_spec_overrides: "{{ _metering_openshift_io_meteringconfig.spec }}"

# The default specs for each component
_openshift_reporting_default_spec: "{{ meteringconfig_default_values['openshift-reporting'].spec }}"
_presto_default_spec: "{{ meteringconfig_default_values.presto.spec }}"
_hive_default_spec: "{{ meteringconfig_default_values.hive.spec }}"
_reporting_op_default_spec: "{{ meteringconfig_default_values['reporting-operator'].spec }}"
_hadoop_default_spec: "{{ meteringconfig_default_values.hadoop.spec }}"

# Default image repository and tag from the defaults
meteringconfig_reporting_operator_default_image_repo: "{{ _reporting_op_default_spec.image.repository }}"
meteringconfig_reporting_operator_default_image_tag: "{{ _reporting_op_default_spec.image.tag }}"
meteringconfig_presto_default_image_repo: "{{ _presto_default_spec.image.repository }}"
meteringconfig_presto_default_image_tag: "{{ _presto_default_spec.image.tag }}"
meteringconfig_hive_default_image_repo: "{{ _hive_default_spec.image.repository }}"
meteringconfig_hive_default_image_tag: "{{ _hive_default_spec.image.tag }}"
meteringconfig_hadoop_default_image_repo: "{{ _hadoop_default_spec.image.repository }}"
meteringconfig_hadoop_default_image_tag: "{{ _hadoop_default_spec.image.tag }}"

_storage_spec: "{{ meteringconfig_default_values | combine(meteringconfig_spec_overrides) | json_query('storage') | default({}, true) }}"

# Override the default images we use with env vars if set, falling back to the values.yaml configured default if not set.
meteringconfig_default_image_overrides:
  reporting-operator:
    spec:
      image:
        repository: "{{ lookup('env','METERING_REPORTING_OPERATOR_IMAGE').split(':')[0] | default(meteringconfig_reporting_operator_default_image_repo, true) }}"
        tag: "{{ lookup('env','METERING_REPORTING_OPERATOR_IMAGE').split(':')[1] | default(meteringconfig_reporting_operator_default_image_tag, true) }}"
  presto:
    spec:
      presto:
        image:
          repository: "{{ lookup('env','METERING_PRESTO_IMAGE').split(':')[0] | default(meteringconfig_presto_default_image_repo, true) }}"
          tag: "{{ lookup('env','METERING_PRESTO_IMAGE').split(':')[1] | default(meteringconfig_presto_default_image_tag, true) }}"
  hive:
    spec:
      image:
        repository: "{{ lookup('env','METERING_HIVE_IMAGE').split(':')[0] | default(meteringconfig_hive_default_image_repo, true) }}"
        tag: "{{ lookup('env','METERING_HIVE_IMAGE').split(':')[1] | default(meteringconfig_hive_default_image_tag, true) }}"
  hadoop:
    spec:
      image:
        repository: "{{ lookup('env','METERING_HADOOP_IMAGE').split(':')[0] | default(meteringconfig_hadoop_default_image_repo, true) }}"
        tag: "{{ lookup('env','METERING_HADOOP_IMAGE').split(':')[1] | default(meteringconfig_hadoop_default_image_tag, true) }}"

_storage_overrides:
  s3:
    storage:
      hive:
        # s3 storage defaults
        s3:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          bucket: "-unconfigured-metering-bucket-name-"
          secretName: ""
          # create buckets by default
          createBucket: true
          region: ""
    reporting-operator:
      spec:
        config:
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    presto:
      spec:
        config:
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    hive:
      spec:
        config:
          # regex_replace to append a trailing slash if missing
          metastoreWarehouseDir: "s3a://{{ _storage_spec | json_query('hive.s3.bucket') | regex_replace('\\/?$', '/') }}"
          aws:
            secretName: "{{ _storage_spec | json_query('hive.s3.secretName') }}"
            createSecret: false
    hadoop:
      spec:
        config:
          # regex_replace to append a trailing slash if missing
          defaultFS: "s3a://{{ _storage_spec | json_query('hive.s3.bucket') | regex_replace('\\/?$', '/') }}"
        hdfs:
          enabled: false

  azure:
    storage:
      hive:
        # azure storage defaults
        azure:
          # Intentionally an invalid default name to ensure that this is overridden, and obvious when it's not.
          container: "-unconfigured-metering-container-name-"
          secretName: ""
          storageAccountName: ""
          secretAccessKey: ""
          createSecret: true
          secretName: ""
          rootDirectory: ""
    presto:
      spec:
        config:
          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
    hive:
      spec:
        config:
          # metastoreWarehouseDir: "wasbs://{{ _storage_spec | json_query('hive.azure.container') | regex_replace('\\/?$', '/') }}"
          metastoreWarehouseDir: "wasbs://{{ _storage_spec | json_query('hive.azure.container') | regex_replace('\\/?$', '') }}@{{ _storage_spec | json_query('hive.azure.storageAccountName') | regex_replace('\\/?$', '')  }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory')| default('', True) | regex_replace('\\/?$', '')   }}"
          # metastoreWarehouseDir: "{{_url_container_name}}+{{_url_storageacc_name}}+{{_url_root_dir}}"
          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
    hadoop:
      spec:
        config:
          # regex_replace to append a trailing slash if missing
          # defaultFS: "wasbs://{{ _storage_spec | json_query('hive.azure.container') | regex_replace('\\/?$', '/') }}"
          defaultFS: "wasbs://{{ _storage_spec | json_query('hive.azure.container') | regex_replace('\\/?$', '') }}@{{ _storage_spec | json_query('hive.azure.storageAccountName') | regex_replace('\\/?$', '')  }}.blob.core.windows.net{{ _storage_spec | json_query('hive.azure.rootDirectory')| default('', True) | regex_replace('\\/?$', '')   }}"
          # defaultFS: "{{_url_container_name}}+{{_url_storageacc_name}}+{{_url_root_dir}}"

          azure:
            secretName: "{{ _storage_spec | json_query('hive.azure.secretName') }}"
            createSecret: "{{ _storage_spec | json_query('hive.azure.createSecret') }}"
            storageAccountName: "{{ _storage_spec | json_query('hive.azure.storageAccountName') }}"
            secretAccessKey: "{{ _storage_spec | json_query('hive.azure.secretAccessKey') }}"
        hdfs:
          enabled: false

  hdfs:
    hadoop:
      spec:
        config:
          defaultFS: "hdfs://{{ _storage_spec | json_query('hive.hdfs.namenode') | default('hdfs-namenode-0.hdfs-namenode:9820', true) }}"
        hdfs:
          enabled: "{{ meteringconfig_spec_overrides | json_query('unsupportedFeatures.enableHDFS') | default(false, true) }}"

  sharedPVC:
    hive:
      spec:
        config:
          metastoreWarehouseDir: "{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
          sharedVolume:
            enabled: true
            createPVC: "{{ _storage_spec | json_query('hive.sharedPVC.createPVC') | default(false, true) }}"
            mountPath: "{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
            claimName: "{{ _storage_spec | json_query('hive.sharedPVC.claimName') | default(_hive_default_spec.config.sharedVolume.claimName, true) }}"
            size: "{{ _storage_spec | json_query('hive.sharedPVC.size') | default(_hive_default_spec.config.sharedVolume.size, true) }}"
            storageClass: "{{ _storage_spec | json_query('hive.sharedPVC.storageClass') | default(_hive_default_spec.config.sharedVolume.storageClass, true) }}"

    hadoop:
      spec:
        config:
          defaultFS: "file://{{ _storage_spec | json_query('hive.sharedPVC.mountPath') | default('/user/hive/warehouse', true) }}"
        hdfs:
          enabled: false

meteringconfig_storage_azure_container_name: "{{ meteringconfig_spec | json_query('storage.hive.azure.container') }}"
meteringconfig_storage_azure_storage_account_name: "{{ meteringconfig_spec | json_query('storage.hive.azure.storageAccountName') }}"
meteringconfig_storage_azure_credentials_secret_name: "{{ meteringconfig_spec | json_query('storage.hive.azure.secretName') }}"
meteringconfig_storage_azure_create_secret: "{{ meteringconfig_spec | json_query('storage.hive.azure.createSecret') }}"

# _url_container_name: "wasbs://{{ _storage_spec | json_query('hive.azure.container') | regex_replace('\\/?$', '/') }}"
# _url_storageacc_name: "@{{ _storage_spec | json_query('hive.azure.storageAccountName') | regex_replace('\\/?$', '/')  }}.blob.core.windows.net"
# _url_root_dir: "{{ _storage_spec | json_query('hive.azure.rootDirectory') | regex_replace('\\/?$', '/') }}"
meteringconfig_storage_hive_storage_type: "{{ _storage_spec | json_query('hive.type') }}"
meteringconfig_storage_overrides: "{{ _storage_overrides[meteringconfig_storage_hive_storage_type] | default({}, true) }}"

#
# Override the default values with _tls_overrides when spec.tls.enabled is set to true, else use values.yaml and meteringconfig_spec_overrides
#
_meteringconfig_reporting_operator_presto_server_ca_certificate: ""
_meteringconfig_reporting_operator_presto_server_secret_name: "reporting-operator-presto-server-tls"

_meteringconfig_reporting_operator_presto_client_secret_name: "reporting-operator-presto-client-tls"
_meteringconfig_reporting_operator_client_cert: ""
_meteringconfig_reporting_operator_client_key: ""

_meteringconfig_reporting_operator_auth_proxy_cookie_seed: ""

_meteringconfig_presto_server_secret_name: "presto-server-tls"
_meteringconfig_presto_server_ca_certificate: ""
_meteringconfig_presto_server_certificate: ""
_meteringconfig_presto_server_key: ""

_meteringconfig_presto_client_secret_name: "presto-client-tls"
_meteringconfig_presto_client_ca_certificate: ""
_meteringconfig_presto_client_certificate: ""
_meteringconfig_presto_client_key: ""

_meteringconfig_tls_root_ca_certificate: ""
_meteringconfig_tls_root_ca_key: ""

_meteringconfig_root_ca_overrides:
  tls:
    certificate: "{{ _meteringconfig_tls_root_ca_certificate }}"
    key: "{{ _meteringconfig_tls_root_ca_key }}"

_tls_overrides:
  reporting-operator:
    spec:
      config:
        presto:
          tls:
            caCertificate: "{{ _meteringconfig_reporting_operator_presto_server_ca_certificate }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringconfig_reporting_operator_presto_server_secret_name }}"

          auth:
            certificate: "{{ _meteringconfig_reporting_operator_client_cert }}"
            key: "{{ _meteringconfig_reporting_operator_client_key }}"

            enabled: true
            createSecret: true
            secretName: "{{ _meteringconfig_reporting_operator_presto_client_secret_name }}"

      authProxy:
        enabled: true

        cookie:
          seed: "{{ _meteringconfig_reporting_operator_auth_proxy_cookie_seed }}"

        deletegateURLs:
          enabled: true

        subjectAccessReview:
          enabled: true

  presto:
    spec:
      config:
        tls:
          certificate: "{{  _meteringconfig_presto_server_certificate }}"
          key: "{{ _meteringconfig_presto_server_key }}"
          caCertificate: "{{ _meteringconfig_presto_server_ca_certificate }}"

          enabled: true
          createSecret: true
          secretName: "{{ _meteringconfig_presto_server_secret_name }}"
        auth:
          certificate: "{{  _meteringconfig_presto_client_certificate }}"
          key: "{{ _meteringconfig_presto_client_key }}"
          caCertificate: "{{ _meteringconfig_presto_client_ca_certificate }}"

          enabled: true
          createSecret: true
          secretName: "{{ _meteringconfig_presto_client_secret_name }}"

# check if the user's spec contains the top-level tls.enabled field. if true, use the value stored in that field, else default to the value stored in values.yaml
meteringconfig_tls_enabled: "{{ meteringconfig_default_values | combine(meteringconfig_spec_overrides, recursive=True) | json_query('tls.enabled') }}"
_meteringconfig_tls_overrides: "{{ meteringconfig_tls_enabled | ternary(_tls_overrides, {}) }}"

# openshift-reporting overrides
meteringconfig_reporting_enable_post_kube_1_14_datasources: "{{ _openshift_reporting_default_spec.defaultReportDataSources.postKube_1_14.enabled }}"

meteringconfig_reporting_overrides:
  openshift-reporting:
    spec:
      defaultReportDataSources:
        postKube_1_14:
          enabled: "{{ meteringconfig_reporting_enable_post_kube_1_14_datasources }}"

# combine the _meteringconfig_tls_overrides dictionary last to enforce when spec.tls.enabled is specified and set to true
meteringconfig_spec: "{{ meteringconfig_default_values | combine(meteringconfig_default_image_overrides, meteringconfig_storage_overrides, meteringconfig_reporting_overrides, meteringconfig_spec_overrides, _meteringconfig_root_ca_overrides, _meteringconfig_tls_overrides, recursive=True) }}"

meteringconfig_storage_s3_create_bucket: "{{ meteringconfig_spec | json_query('storage.hive.s3.createBucket') }}"
meteringconfig_storage_s3_bucket_name: "{{ (meteringconfig_spec | json_query('storage.hive.s3.bucket') | default('', true)).split('/')[0] }}"
meteringconfig_storage_s3_bucket_region: "{{ meteringconfig_spec | json_query('storage.hive.s3.region') }}"
meteringconfig_storage_s3_aws_credentials_secret_name: "{{ meteringconfig_spec | json_query('storage.hive.s3.secretName') }}"

########################
# All Variables below are setup to consume the result of merging the defaults, internal overrides, and user overrides.
########################

# Private variables to reduce boilerplate
_monitoring_conf: "{{ meteringconfig_spec.monitoring }}"
_openshift_reporting_spec: "{{ meteringconfig_spec['openshift-reporting'].spec }}"
_presto_spec: "{{ meteringconfig_spec.presto.spec }}"
_hive_spec: "{{ meteringconfig_spec.hive.spec }}"
_reporting_op_spec: "{{ meteringconfig_spec['reporting-operator'].spec }}"
_hadoop_spec: "{{ meteringconfig_spec.hadoop.spec }}"


meteringconfig_log_helm_template: "{{ meteringconfig_spec.logHelmTemplate | default(false) }}"

meteringconfig_create_metering_default_storage: "{{ _openshift_reporting_spec.defaultStorageLocation.enabled }}"

meteringconfig_create_metering_monitoring_resources: "{{ _monitoring_conf.enabled | default(true) }}"
meteringconfig_create_metering_monitoring_rbac: "{{ _monitoring_conf.enabled and _monitoring_conf.enabled and _monitoring_conf.createRBAC | default(true) }}"
meteringconfig_create_metering_root_ca_secret: "{{ meteringconfig_spec.tls.enabled }}"

meteringconfig_enable_reporting_aws_billing: "{{ _openshift_reporting_spec.awsBillingReportDataSource.enabled | default(false) }}"

meteringconfig_enable_hdfs: "{{ _hadoop_spec.hdfs.enabled | default(true) }}"
meteringconfig_create_hadoop_aws_credentials: "{{ _hadoop_spec.config.aws.createSecret | default(false) }}"
meteringconfig_create_hadoop_azure_credentials: "{{ _hadoop_spec.config.azure.createSecret | default(false) }}"

meteringconfig_create_hive_metastore_pvc: "{{ _hive_spec.metastore.storage.create | default(true) }}"
meteringconfig_create_hive_shared_volume_pvc: "{{ _hive_spec.config.sharedVolume.enabled and _hive_spec.config.sharedVolume.createPVC | default(false) }}"
meteringconfig_create_hive_aws_credentials: "{{ _hive_spec.config.aws.createSecret | default(false) }}"
meteringconfig_create_hive_azure_credentials: "{{ _hive_spec.config.azure.createSecret | default(false) }}"

meteringconfig_create_hive_metastore_tls_secrets: "{{ _hive_spec.metastore.config.tls.enabled and _hive_spec.metastore.config.tls.createSecret | default(false) }}"
meteringconfig_create_hive_server_metastore_tls_secrets: "{{ _hive_spec.server.config.metastoreTLS.enabled and _hive_spec.server.config.metastoreTLS.createSecret | default(false) }}"
meteringconfig_create_hive_server_tls_secrets: "{{ _hive_spec.server.config.tls.enabled and _hive_spec.server.config.tls.createSecret | default(false) }}"

meteringconfig_create_presto_aws_credentials: "{{ _presto_spec.config.aws.createSecret | default(false) }}"
meteringconfig_create_presto_azure_credentials: "{{ _presto_spec.config.azure.createSecret | default(false) }}"
meteringconfig_create_presto_hive_metastore_tls_secrets: "{{ _presto_spec.config.connectors.hive.tls.createSecret | default(false) }}"

#
# Enabling Presto TLS/Auth by Default
#
meteringconfig_template_presto_tls_secret: "{{ _presto_spec.config.tls.enabled and _presto_spec.config.tls.createSecret and _presto_spec.config.tls.secretName != 'presto-server-tls' }}"
meteringconfig_template_presto_auth_secret: "{{ _presto_spec.config.auth.enabled and _presto_spec.config.auth.createSecret and _presto_spec.config.auth.secretName != 'presto-client-tls' }}"
meteringconfig_create_presto_tls_secrets: "{{ _presto_spec.config.tls.enabled and _presto_spec.config.tls.createSecret | default(false) }}"
meteringconfig_create_presto_auth_secrets: "{{ _presto_spec.config.auth.enabled and _presto_spec.config.auth.createSecret | default(false) }}"

#
# Reporting Operator
#
meteringconfig_create_reporting_operator_auth_proxy_cookie_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.cookie.createSecret | default(true) }}"
meteringconfig_create_reporting_operator_auth_proxy_htpasswd_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.htpasswd.createSecret | default(true) }}"
meteringconfig_create_reporting_operator_auth_proxy_authenticated_emails_secret: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.authenticatedEmails.createSecret | default(true) }}"
meteringconfig_create_reporting_operator_auth_proxy_rbac: "{{ _reporting_op_spec.authProxy.enabled and _reporting_op_spec.authProxy.rbac.createAuthProxyClusterRole and (_reporting_op_spec.authProxy.subjectAccessReview.enabled and _reporting_op_spec.authProxy.delegateURLs.enabled) | default(false) }}"
meteringconfig_create_reporting_operator_prometheus_bearer_token: "{{ _reporting_op_spec.config.prometheus.metricsImporter.auth.tokenSecret.create | default(false) }}"
meteringconfig_create_reporting_operator_prometheus_certificate_authority: "{{ _reporting_op_spec.config.prometheus.certificateAuthority.configMap.create | default(false) }}"
meteringconfig_create_reporting_operator_aws_credentials: "{{ _reporting_op_spec.config.aws.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_presto_tls_secrets: "{{ _reporting_op_spec.config.presto.tls.enabled and _reporting_op_spec.config.presto.tls.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_presto_auth_secrets: "{{ _reporting_op_spec.config.presto.auth.enabled and _reporting_op_spec.config.presto.auth.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_hive_tls_secrets: "{{ _reporting_op_spec.config.hive.tls.enabled and _reporting_op_spec.config.hive.tls.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_hive_auth_secrets: "{{ _reporting_op_spec.config.hive.auth.enabled and _reporting_op_spec.config.hive.auth.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_tls_secrets: "{{ _reporting_op_spec.config.tls.api.createSecret | default(false) }}"
meteringconfig_create_reporting_operator_route: "{{ _reporting_op_spec.route.enabled | default(false) }}"
meteringconfig_create_reporting_operator_cluster_monitoring_view_rbac: "{{ _reporting_op_spec.rbac.createClusterMonitoringViewRBAC | default(true) }}"
