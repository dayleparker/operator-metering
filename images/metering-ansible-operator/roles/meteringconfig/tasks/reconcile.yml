---

- name: Check for secret
  k8s_facts:
    api_version: v1
    kind: Secret
    name: "{{ meteringconfig_spec.storage.hive.azure.secretName }}"
    namespace: "{{ meta.namespace }}"
  register: secret_buf

- name: asdf
  debug:
    var:
    - meta.namespace
    - meteringconfig_spec.storage.hive.azure.secretName
    - _use_azure_secret
    - _whatever_variable
    msg:
    - "YOYOYOYOYOY is {{ meta.namespace }}"
    - "YOYOYOYOYOY is {{ meta.namespace }}"
    - "YOYOYOYOYOY is {{ meteringconfig_spec.storage.hive.azure.secretName }}"
    - "YOYOYOYOYOY is {{ _use_azure_secret }}"
    - "YOYOYOYOYOY is {{ _whatever_variable }}"
    # - "YOYOYOYOYOY is {{ _whatever_variable }}"




- name: Validate storage configuration
  fail:
    msg: "Unsupported spec.storage.type, only 'hive' is  a supported option"
  when: meteringconfig_spec | json_query('storage.type') != "hive"

- name: Validate Hive storage configuration
  fail:
    msg: "Invalid spec.storage.hive.type: '{{ hiveStorageType }}', must be one of 's3', 'azure', or 'sharedPVC'"
  vars:
    hiveStorageType: "{{ meteringconfig_spec_overrides | json_query('storage.hive.type') }}"
  when: hiveStorageType is undefined or hiveStorageType not in ['s3', 'sharedPVC', 'hdfs', 'azure']

- name: Configure TLS
  include_tasks: configure_tls.yml

- name: Configure Reporting
  include_tasks: configure_reporting.yml

- name: Configure Storage
  include_tasks: configure_storage.yml

- name: Store MeteringConfig spec into values file
  copy: content="{{ meteringconfig_spec }}" dest=/tmp/metering-values.yaml

- include_tasks: "{{ item }}"
  loop:
    - reconcile_metering.yml
    - reconcile_monitoring.yml
    - reconcile_hdfs.yml
    - reconcile_hive.yml
    - reconcile_presto.yml
    - reconcile_reporting_operator.yml
    - reconcile_reporting.yml
